# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Continuous Integration with Github Actions

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Docker Login
      uses: docker/login-action@v3.3.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
          
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
      
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      with:
        gradle-version: 8.5

    - name: Set executable permissions for gradlew
      working-directory: ./server
      run: chmod +x gradlew
      
    - name: Build with Gradle
      working-directory: ./server
      run: ./gradlew build -x test

    - name: Build with Docker Compose
      run: docker compose build

    - name: push to Docker Hub
      run: |
        docker ${{ secrets.DOCKER_USERNAME }}/atlas-server:latest ${{ secrets.DOCKER_USERNAME }}/atlas-server:${{ github.run_id }}

        docker push ${{ secrets.DOCKER_USERNAME }}/atlas-server:${{ github.run_id }}
        docker push ${{ secrets.DOCKER_USERNAME }}/atlas-server:latest

